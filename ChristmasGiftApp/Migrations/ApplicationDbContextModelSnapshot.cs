// <auto-generated />
using ChristmasGiftApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChristmasGiftApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChristmasGiftApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new { Id = 1, EmailAddress = "g.gilbert@company.com", FirstName = "Guy", LastName = "Gilbert" },
                        new { Id = 2, EmailAddress = "k.brown@company.com", FirstName = "Kevin", LastName = "Brown" },
                        new { Id = 3, EmailAddress = "r.tamburello@company.com", FirstName = "Roberto", LastName = "Tamburello" },
                        new { Id = 4, EmailAddress = "r.walters@company.com", FirstName = "Rob", LastName = "Walters" },
                        new { Id = 5, EmailAddress = "d.bradley@company.com", FirstName = "David", LastName = "Bradley" },
                        new { Id = 6, EmailAddress = "r.ellerbrock@company.com", FirstName = "Ruth", LastName = "Ellerbrock" },
                        new { Id = 7, EmailAddress = "g.erickson@company.com", FirstName = "Geil", LastName = "Erickson" },
                        new { Id = 8, EmailAddress = "steven0@adventure-works.com", FirstName = "Steven", LastName = "Selikoff" },
                        new { Id = 9, EmailAddress = "peter0@adventure-works.com", FirstName = "Peter", LastName = "Krebs" },
                        new { Id = 10, EmailAddress = "stuart0@adventure-works.com", FirstName = "Stuart", LastName = "Munson" }
                    );
                });

            modelBuilder.Entity("ChristmasGiftApp.Models.EmployeeGift", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("TargetEmployeeId");

                    b.Property<int>("Year");

                    b.HasKey("EmployeeId", "TargetEmployeeId", "Year");

                    b.HasIndex("TargetEmployeeId");

                    b.ToTable("EmployeeGifts");
                });

            modelBuilder.Entity("ChristmasGiftApp.Models.EmployeeGift", b =>
                {
                    b.HasOne("ChristmasGiftApp.Models.Employee", "Employee")
                        .WithMany("Gifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ChristmasGiftApp.Models.Employee", "TargetEmployee")
                        .WithMany()
                        .HasForeignKey("TargetEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
